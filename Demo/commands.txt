docker build -t kub-demo .		//build image

minikube start --driver=docker		//start minikube cluster and configure kubectl to point to it
minikube status			//to check if it's already running
minikube dashboard		//opens dashboard in browser

docker tag kub-demo shashanka318/kub-demo	//rename image so that docker push works

docker push shashanka318/kub-demo		//push the image to docker hub

kubectl create deployment my-app --image=shashanka318/kub-demo	//will create and send object to cluster

kubectl get deployments		//get all deployment objects in cluster

kubectl get pods		//get all pod objects in cluster

kubectl expose deployment my-app --type=LoadBalancer --port=8080		//create a service object to expose deployment --type:[ClusterIP(default) - accessible only inside cluster,
NodePort - expose by using IP address of worker node, LoadBalancer - generate unique address and also balance the load]

kubectl get services		//get all service objects in cluster

minikube service my-app 	//since it's a dummy cluster(no external IP address), minikube provides an IP address to access the services of this pod

[Go to the error route and check pods]

kubectl scale deployments/my-app --replicas=3 	//create 3 instances of the pod

[Crash the website to see scaling, and then sclae it down to 1 again]

kubectl delete deployment my-app		//Delete all pods and services also similarly

kubectl apply -f deployment.yaml         //Declarative approach

minikube service backend		   //expose the service with name backend